%% BibTeX bibliography file

%% Created for John Thywissen at 2016-07-26 07:20:25 -0500 


%% Saved with string encoding Unicode (UTF-8) 



@inproceedings{Thywissen:2016b,
	Address = {New York},
	Author = {Thywissen, John A. and Peters, Arthur Michener and Cook, William R.},
	Booktitle = {PMLDC'16: First Workshop on Programming Models and Languages for Distributed Computing},
	City = {Rome, Italy},
	Date = {2016 } # jul # { 17},
	Date-Added = {2016-06-10 16:21:25 +0000},
	Date-Modified = {2016-07-26 11:08:36 +0000},
	Doi = {10.1145/2957319.2957370},
	Isbn = {978-1-4503-4775-4},
	Keywords = {concurrent; location transparency; Orc; semantics; tierless},
	Pages = {Article 1},
	Publisher = {ACM},
	Read = {1},
	Title = {Implicitly Distributing Pervasively Concurrent Programs [extended abstract]},
	Year = {2016},
	Abstract = {Distributed programs are often written as a collection of communicating modules. For example, to use Java RMI, programs are divided into objects which can be remotely referenced. Yet, in many cases, it would be desirable to write the program without the program structure being driven by distribution decisions. If distribution is decoupled from program structure, the programming language must allow communication throughout a program's structure, instead of at a few known points. This situation is simplified if the programming language provides a uniform programming model for local and remote values (location transparency). We present Distributed Orc, which offers location transparency, and distributes program operations automatically in cooperation with the execution environment. By eliminating any special semantics of remote values, Distributed Orc enables programmers to write cohesive distributed programs, rather than programs artificially divided at distribution boundaries. Distributed Orc is derived from the Orc language, a (centralized) concurrent orchestration language.}}
