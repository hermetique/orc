# DistribTestConfig.properties -- Configuration settings for distributed Orc testing

# DistribTestConfig has a simplistic variable substitution mechanism.  All
# character strings of the form ${varname} in values are are substituted with
# the value bound to the key varname.
#
# The following 5 variables are also available for use in this file:
#   currentJavaHome -- the Java system property "java.home"
#   currentWorkingDir -- the current working directory
#   leaderHomeDir -- the current user's home directory on the leader host
#   orcVersion -- the version number of the currently executing Orc
#   testRunNumber -- a string uniquely identifying this Orc test run

#Running locally:
javaHome=${currentJavaHome}
testRootDir=${currentWorkingDir}/..
orcTestsProjDir=${currentWorkingDir}


##Running remotely:
#javaHome=${leaderHomeDir}/graalvm-0.26/jre
#testRootDir=${leaderHomeDir}/orc-test-root
#orcTestsProjDir=${testRootDir}/OrcTests


#Running either locally or remotely:

javaCmd=${javaHome}/bin/java

dOrcClassPath[0]=${testRootDir}/OrcScala/build/orc-${orcVersion}.jar
dOrcClassPath[1]=${testRootDir}/OrcScala/lib/*
dOrcClassPath[2]=${testRootDir}/PorcE/build/classes
dOrcClassPath[3]=${testRootDir}/OrcTests/build

dOrcTestDataDir=${orcTestsProjDir}/test_data/functional_valid/distrib

orcConfigDir=${orcTestsProjDir}/config
loggingConfigFile=${orcConfigDir}/logging.properties

runOutputDir=${orcTestsProjDir}/runs/${testRunNumber}/raw-output

# Note that our current Graal setup points javaHome to the JRE, not the JDK

jvmOpts[0]=-Xbootclasspath/a:${javaHome}/lib/truffle/truffle-api.jar
jvmOpts[1]=-XX:-UseJVMCIClassLoader
jvmOpts[2]=-Djava.util.logging.config.file=${loggingConfigFile}
jvmOpts[3]=-Dsun.io.serialization.extendedDebugInfo=true
jvmOpts[4]=-Dorc.config.dirs=${orcConfigDir}
jvmOpts[5]=-Dorc.executionlog.dir=${runOutputDir}


#Running locally:

leaderHostname=localhost

followerHostname[1]=localhost
followerPort[1]=29201
followerHostname[2]=localhost
followerPort[2]=29202
followerHostname[3]=localhost
followerPort[3]=29203
followerHostname[4]=localhost
followerPort[4]=29204
followerHostname[5]=localhost
followerPort[5]=29205
followerHostname[6]=localhost
followerPort[6]=29206
followerHostname[7]=localhost
followerPort[7]=29207
followerHostname[8]=localhost
followerPort[8]=29208
followerHostname[9]=localhost
followerPort[9]=29209
followerHostname[10]=localhost
followerPort[10]=29210
followerHostname[11]=localhost
followerPort[11]=29211
followerHostname[12]=localhost
followerPort[12]=29212


##Running remotely:
#
#leaderHostname=test-host-1.example.com
#
#followerHostname[1]=test-host-2.example.com
#followerPort[1]=29201
#followerHostname[2]=test-host-3.example.com
#followerPort[2]=29202
#followerHostname[3]=test-host-4.example.com
#followerPort[3]=29203
#followerHostname[4]=test-host-5.example.com
#followerPort[4]=29204
#followerHostname[5]=test-host-6.example.com
#followerPort[5]=29205
#followerHostname[6]=test-host-7.example.com
#followerPort[6]=29206
#followerHostname[7]=test-host-8.example.com
#followerPort[7]=29207
#followerHostname[8]=test-host-9.example.com
#followerPort[8]=29208
#followerHostname[9]=test-host-10.example.com
#followerPort[9]=29209
#followerHostname[10]=test-host-11.example.com
#followerPort[10]=29210
#followerHostname[11]=test-host-12.example.com
#followerPort[11]=29211
#followerHostname[12]=test-host-13.example.com
#followerPort[12]=29212


#Running either locally or remotely:

leaderWorkingDir=${orcTestsProjDir}
leaderClass=orc.Main
leaderOpts[0]=--optimize=3
leaderOpts[1]=--backend=porc-distrib
leaderOpts[2]=--java-stack-trace

followerWorkingDir=${orcTestsProjDir}
followerClass=orc.run.distrib.porce.FollowerRuntime
